server {
    listen 80;
    server_name {{ domain_name }};
    return 301 https://{{ domain_name }}$request_uri;
    return 301 https://{{ base_domain_name }}$request_uri;
}
server {
    listen 80;
    server_name {{ base_domain_name }};
    return 301 https://{{ domain_name }}$request_uri;
}
server {
        ### server port and name ###
        listen 443 default;
        ssl on;
        server_name {{ domain_name }};

        ### SSL cert files ###
        ssl_certificate /etc/nginx/ssl/{{ domain_name }}.crt;
        ssl_certificate_key /etc/nginx/ssl/{{ domain_name }}.key;

        ### Add SSL specific settings here ###

        ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
        ssl_prefer_server_ciphers on;
        keepalive_timeout    60;

        ### We want full access to SSL via backend ###
        location / {
            proxy_pass  http://127.0.0.1:{{ wordpress_host_port }};

            ### force timeouts if one of backend is died ##
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

            ### Set headers ####
            proxy_set_header        Accept-Encoding   "";
            proxy_set_header        Host            $host;
            proxy_set_header        X-Real-IP       $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

            ### Most PHP, Python, Rails, Java App can use this header ###
            # proxy_set_header        X-Forwarded-Proto https;
            #This is better##
            proxy_set_header        X-Forwarded-Proto $scheme;
            add_header              Front-End-Https   on;

            proxy_redirect      http://127.0.0.1 https://{{ domain_name }};
        }
}
